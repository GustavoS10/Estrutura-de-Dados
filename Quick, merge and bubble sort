def quick_sort(arr):
    if len(arr) <= 1:
        return arr

    pivot = arr[len(arr) // 2]
    left = [x for x in arr if x < pivot]
    middle = [x for x in arr if x == pivot]
    right = [x for x in arr if x > pivot]

    return quick_sort(left) + middle + quick_sort(right)


arr_quick_sort = [3, 6, 8, 10, 1, 2, 1]
sorted_arr_quick_sort = quick_sort(arr_quick_sort)
print("Quick Sort:", sorted_arr_quick_sort)
###########################################################
def merge_sort(arr):
    if len(arr) <= 1:
        return arr

    mid = len(arr) // 2
    left = arr[:mid]
    right = arr[mid:]

    left = merge_sort(left)
    right = merge_sort(right)

    return merge(left, right)

def merge(left, right):
    result = []
    i = j = 0
n(left) and j < len(right):
        if left[i] < right[j]:
            result.append(left[i])
            i += 1
        else:
            result.append(right[j])
            j += 1

    result.extend(left[i:])
    result.extend(right[j:])
    return result


arr_merge_sort = [3, 6, 8, 10, 1, 2, 1]
sorted_arr_merge_sort = merge_sort(arr_merge_sort)
print("Merge Sort:", sorted_arr_merge_sort)
#####################################################
def bubble_sort(arr):
    n = len(arr)

    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]

arr_bubble_sort = [3, 6, 8, 10, 1, 2, 1]
ubble_sort)
print("Bubble Sort:", arr_bubble_sort)
